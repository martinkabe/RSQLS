% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{push_data}
\alias{push_data}
\title{Pushing data from data.frame object into SQL table on SQL Server}
\usage{
push_data(connectionString, df, sqltabname, append = FALSE,
  showprogress = FALSE, quotes = "auto", separator = "\\t")
}
\arguments{
\item{connectionString}{SQL connection string}

\item{df}{Data.Frame to be pushed into SQL table}

\item{sqltabname}{SQL table name}

\item{append}{Append new rows (If \strong{append == TRUE} then appending new rows into existing SQL table. If \strong{append == FALSE} then deletes rows in existing SQL table and appends new records.)}

\item{showprogress}{Showing progress (default value is FALSE)}

\item{quotes}{When "auto", character fields, factor fields and column names will only be surrounded by double quotes when they need to be; i.e., when the field contains the separator sep, a line ending \\n, the double quote itself. If FALSE the fields are not wrapped with quotes even if this would break the CSV due to the contents of the field. If TRUE double quotes are always included other than around numeric fields, as write.csv}

\item{separator}{Default is "\\t". This determines what separator is used during csv is generated.}
}
\description{
This function pushes data from data.frame object
into SQL table on SQL server.
}
\note{
Table is automatically created if doesn't exist on SQL Server with automatically identified data types.

How to set up SQL Server connection string see \link{set_connString}.
}
\examples{
\dontrun{
push_data(connectionString, dataFrame, "dbo.TableName")
}
}
